FROM --platform=$TARGETPLATFORM ubuntu:24.04 AS base

# Chisel 3 docker image for Chip Dev
# ==========
# Fangrui Liu / fangrui.liu@outlook.com / 2023

ARG TARGETARCH
USER root

RUN apt-get update && apt-get upgrade -y && apt install ca-certificates -y

FROM base AS base-amd64
RUN echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble main restricted universe multiverse\n" > /etc/apt/sources.list; \
    echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-updates main restricted universe multiverse\n" >> /etc/apt/sources.list; \
    echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-backports main restricted universe multiverse\n" >> /etc/apt/sources.list; \
    echo "deb http://security.ubuntu.com/ubuntu/ noble-security main restricted universe multiverse\n" >> /etc/apt/sources.list;
RUN apt-get update && apt-get install default-jdk sudo git make autoconf g++ flex bison curl wget gnupg ninja-build help2man cmake -y && apt-get clean -y
WORKDIR /workspace/
# install firtool
RUN mkdir circt && \
    wget -O - https://github.com/llvm/circt/releases/download/firtool-1.62.1/circt-full-sources.tar.gz | tar -xz -C circt && \
    cd /workspace/circt && \
    mkdir -p llvm/build && cd llvm/build && \
    cmake -G Ninja /workspace/circt/llvm/llvm \
    -DLLVM_ENABLE_PROJECTS="mlir" \
    -DLLVM_TARGETS_TO_BUILD="host" \
    -DCMAKE_JOB_POOLS="compile=8;link=1" \
    -DCMAKE_JOB_POOL_LINK="link" \
    -DCMAKE_JOB_POOL_COMPILE="compile" \
    -DLLVM_ENABLE_ASSERTIONS=ON \
    -DCMAKE_BUILD_TYPE=RELEASE \
    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON && ninja && \
    mkdir -p /workspace/circt/build && cd /workspace/circt/build && \
    sed -ie 's/"unknown git version"/"firtool-1.62.1"/g' /workspace/circt/cmake/modules/GenVersionFile.cmake && \
    cmake -G Ninja /workspace/circt \
    -DMLIR_DIR=/workspace/circt/llvm/build/lib/cmake/mlir \
    -DLLVM_DIR=/workspace/circt/llvm/build/lib/cmake/llvm \
    -DCMAKE_JOB_POOLS="compile=8;link=1" \
    -DCMAKE_JOB_POOL_LINK="link" \
    -DCMAKE_JOB_POOL_COMPILE="compile" \
    -DLLVM_ENABLE_ASSERTIONS=ON \
    -DCMAKE_BUILD_TYPE=RELEASE \
    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON && ninja && \
    mv /workspace/circt/build/bin/* /usr/local/bin/ && cd /workspace && rm -rf /workspace/circt


FROM base AS base-arm64
RUN echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ noble main restricted universe multiverse" > /etc/apt/sources.list; \ 
    echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ noble-updates main restricted universe multiverse" >> /etc/apt/sources.list; \ 
    echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ noble-backports main restricted universe multiverse" >> /etc/apt/sources.list; \ 
    echo "deb http://ports.ubuntu.com/ubuntu-ports/ noble-security main restricted universe multiverse" >> /etc/apt/sources.list; 
RUN apt-get update && apt-get install default-jdk sudo git make autoconf g++ flex bison curl wget gnupg ninja-build help2man cmake -y && apt-get clean -y
WORKDIR /workspace/
# install firtool
RUN mkdir circt && \
    wget -O - https://github.com/llvm/circt/releases/download/firtool-1.62.1/circt-full-sources.tar.gz | tar -xz -C circt && \
    cd /workspace/circt && \
    mkdir -p llvm/build && cd llvm/build && \
    cmake -G Ninja /workspace/circt/llvm/llvm \
    -DLLVM_ENABLE_PROJECTS="mlir" \
    -DLLVM_TARGETS_TO_BUILD="host" \
    -DCMAKE_JOB_POOLS="compile=8;link=1" \
    -DCMAKE_JOB_POOL_LINK="link" \
    -DCMAKE_JOB_POOL_COMPILE="compile" \
    -DLLVM_ENABLE_ASSERTIONS=ON \
    -DCMAKE_BUILD_TYPE=RELEASE \
    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON && ninja && \
    mkdir -p /workspace/circt/build && cd /workspace/circt/build && \
    sed -ie 's/"unknown git version"/"firtool-1.62.1"/g' /workspace/circt/cmake/modules/GenVersionFile.cmake && \
    cmake -G Ninja /workspace/circt \
    -DMLIR_DIR=/workspace/circt/llvm/build/lib/cmake/mlir \
    -DLLVM_DIR=/workspace/circt/llvm/build/lib/cmake/llvm \
    -DCMAKE_JOB_POOLS="compile=8;link=1" \
    -DCMAKE_JOB_POOL_LINK="link" \
    -DCMAKE_JOB_POOL_COMPILE="compile" \
    -DLLVM_ENABLE_ASSERTIONS=ON \
    -DCMAKE_BUILD_TYPE=RELEASE \
    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON && ninja && \
    mv /workspace/circt/build/bin/* /usr/local/bin/ && cd /workspace && rm -rf /workspace/circt

FROM base-${TARGETARCH} AS env

WORKDIR /workspace/
RUN git clone --progress https://github.com/verilator/verilator && cd /workspace/verilator && git pull && git checkout v5.036 && autoconf && ./configure && make -j8 && make install && make clean && rm -rf /workspace/verilator

WORKDIR /workspace/

# accessibility
RUN apt install net-tools -y && apt clean -y

FROM env AS scala-amd64
# install sbt
# Reference: https://www.scala-sbt.org/download.html
RUN curl -fL https://github.com/coursier/coursier/releases/latest/download/cs-x86_64-pc-linux.gz | gzip -d > cs && chmod +x cs && ./cs setup -y && rm -rf cs-x86_64-pc-linux.gz

# if arm64
FROM env AS scala-arm64
RUN curl -fL https://github.com/VirtusLab/coursier-m1/releases/latest/download/cs-aarch64-pc-linux.gz | gzip -d > cs && chmod +x cs && ./cs setup -y && rm -rf cs-aarch64-pc-linux.gz

# build chisel
FROM scala-${TARGETARCH}
ENV PATH="${PATH}:/root/.local/share/coursier/bin/:/usr/local/bin/"
RUN git clone --progress https://github.com/chipsalliance/chisel.git && cd /workspace/chisel/ && git checkout v6.7.0 && sbt compile && sbt "unipublish / publishLocal" && rm -rf /workspace/chisel

# clean up chisel sources
WORKDIR /workspace/
ENV COURSIER_CACHE="/workspace/.cache/coursier/v1"
CMD ["bash"]